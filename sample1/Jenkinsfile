podTemplate(yaml: '''
    apiVersion: v1
    kind: Pod
    spec:
      containers:
      - name: gradle
        image: gradle:6.3-jdk14
        command:
        - sleep
        args:
        - 99d
        volumeMounts:
        - name: shared-storage
          mountPath: /mnt
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - sleep
        args:
        - 9999999
        volumeMounts:
        - name: shared-storage
          mountPath: /mnt
        - name: kaniko-secret
          mountPath: /kaniko/.docker
      restartPolicy: Never
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: jenkins-pv-claim
      - name: kaniko-secret
        secret:
            secretName: dockercred
            items:
            - key: .dockerconfigjson
              path: config.json
''')
 {
  node(POD_LABEL) {
    stage('Build a gradle project') {
      //git branch: 'master', url: 'https://github.com/Fezalkhalifa/Week6Exc.git'
      container('gradle') {
        stage('Build a gradle project') {
          sh '''
           chmod +x sample1
           cd sample1
           pwd
           chmod +x gradlew
          ./gradlew build
          mv ./build/libs/calculator-0.0.1-SNAPSHOT.jar /mnt
          '''
        }
        if (env.BRANCH_NAME == 'master' || env.BRANCH_NAME == 'feature') {
          stage('Unit test') {
            echo "I am the ${env.BRANCH_NAME} branch"
            try {
              sh '''
                      pwd
                      chmod +x sample1
                      cd sample1
                      chmod +x gradlew
                      ./gradlew test
                       '''
            }
            catch (Exception E) {
              echo 'Failure detected'
            }
          }
        }
        else {
          echo "I am the ${env.BRANCH_NAME} branch due to unmatched condition Unit test stage skipped"
        }
        if (env.BRANCH_NAME == 'master') {
          stage('Code coverage') {
            echo "I am the ${env.BRANCH_NAME} branch"
            try {
              sh '''
                        pwd
                        chmod +x sample1
                           cd sample1
                        ./gradlew jacocoTestCoverageVerification
                        ./gradlew jacocoTestReport
                        '''
                    } catch (Exception E) {
              echo 'Failure detected'
            }

            // from the HTML publisher plugin
            // https://www.jenkins.io/doc/pipeline/steps/htmlpublisher/
            publishHTML(target: [
                        reportDir: 'sample1/build/reports/tests/test',
                        reportFiles: 'index.html',
                        reportName: 'JaCoCo Report'
                    ])
          }
        }
        else {
          echo "I am the ${env.BRANCH_NAME} branch due to unmatched condition Code coverage stage skipped"
        }
        if (env.BRANCH_NAME == 'master' || env.BRANCH_NAME == 'feature') {
          stage('Code checkstyle') {
            echo "I am the ${env.BRANCH_NAME} branch"
            try {
              sh '''
                 pwd
                 chmod +x sample1
                 cd sample1
                 chmod +x gradlew
                 ./gradlew checkstyleMain
                 ./gradlew jacocoTestReport
                 '''
            }
            catch (Exception E) {
              echo 'Failure detected'
            }
          }
       }else {
          echo "I am the ${env.BRANCH_NAME} branch due to unmatched condition Code checkstyle stage skipped"
        }
      }
    }

    stage('Build Java Image') {
      if (env.BRANCH_NAME == 'master' || env.BRANCH_NAME == 'feature') {
        container('kaniko') {
          stage('Build a gradle project') {
            if (env.BRANCH_NAME == 'master') {
              sh '''
                     echo 'FROM openjdk:8-jre' > Dockerfile
                     echo 'COPY ./calculator-0.0.1-SNAPSHOT.jar app.jar' >> Dockerfile
                     echo 'ENTRYPOINT ["java", "-jar", "app.jar"]' >> Dockerfile
                     mv /mnt/calculator-0.0.1-SNAPSHOT.jar .
                     /kaniko/executor --context `pwd` --destination fezal/calculator:1.0
                '''
            }
          else if (env.BRANCH_NAME == 'feature') {
              sh '''
                    echo 'FROM openjdk:8-jre' > Dockerfile
                    echo 'COPY ./calculator-0.0.1-SNAPSHOT.jar app.jar' >> Dockerfile
                    echo 'ENTRYPOINT ["java", "-jar", "app.jar"]' >> Dockerfile
                    mv /mnt/calculator-0.0.1-SNAPSHOT.jar .
                    /kaniko/executor --context `pwd` --destination fezal/calculator-feature:0.1
                  '''
          }
          }
        }
     }else {
        echo "I am the ${env.BRANCH_NAME} branch due to unmatched condition Kaniko container creation skipped"
      }
    }
  }
 }
